name: Build Aseprite
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            skia_arch: x64
            ext: .exe
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    # 安装7zip (Windows)
    - name: Install 7zip
      if: runner.os == 'Windows'
      shell: powershell
      run: choco install 7zip -y
    
    # 下载预编译的Skia
    - name: Download Skia
      shell: bash
      run: |
        SKIA_VERSION=m102-861e4743af
        skia_url="https://github.com/aseprite/skia/releases/download/${SKIA_VERSION}/Skia-Windows-Release-x64.zip"
        
        echo "Downloading Skia from: $skia_url"
        curl -L "$skia_url" -o skia.zip
        7z x skia.zip -o skia
        ls -R skia || true
    
    # 设置构建环境
    - name: Setup build environment
      shell: bash
      run: |
        echo "enable_ccache=off" >> $GITHUB_ENV
        echo "laf_backend=skia" >> $GITHUB_ENV
        echo "enable_scripting=on" >> $GITHUB_ENV
        echo "skia_arch=${{ matrix.skia_arch }}" >> $GITHUB_ENV
    
    # Windows特定设置
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    
    # 生成构建系统
    - name: Generate build files
      shell: bash
      run: |
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DENABLE_SCRIPTING=${{ env.enable_scripting }} \
          -DLAF_BACKEND=${{ env.laf_backend }} \
          -DSKIA_DIR=$(pwd)/skia \
          -DSKIA_LIBRARY_DIR=$(pwd)/skia/out/Release-${{ env.skia_arch }}
    
    # 编译Aseprite
    - name: Build Aseprite
      shell: bash
      run: |
        cd build && ninja aseprite
    
    # 上传制品 (修正后的版本)
    - name: Upload Aseprite Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Aseprite-Windows
        path: |
          build/bin/aseprite.exe
          build/bin/data/**
        if-no-files-found: error
